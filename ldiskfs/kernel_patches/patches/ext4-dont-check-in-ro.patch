Index: linux-stage/fs/ext4/mballoc.c
===================================================================
--- linux-stage.orig/fs/ext4/mballoc.c	2013-01-23 12:52:20.000000000 +0200
+++ linux-stage/fs/ext4/mballoc.c	2013-01-23 19:19:17.000000000 +0200
@@ -3446,6 +3446,10 @@ int ext4_mb_check_ondisk_bitmap(struct s
 	unsigned short max = EXT4_BLOCKS_PER_GROUP(sb);
 	unsigned short i, first, free = 0;
 
+	/* be quiet if readonly device */
+	if (dev_check_rdonly(sb->s_bdev))
+		return 0;
+
 	i = mb_find_next_zero_bit(bitmap, max, 0);
 
 	while (i < max) {
@@ -3827,6 +3831,7 @@ ext4_mb_release_inode_pa(struct ext4_bud
 		bit = next + 1;
 	}
 
+
 	/* "free < pa->pa_free" means we maybe double alloc the same blocks,
 	 * otherwise maybe leave some free blocks unavailable, no need to BUG.*/
 	if ((free > pa->pa_free && !pa->pa_error) || (free < pa->pa_free)) {
@@ -3846,7 +3851,10 @@ ext4_mb_release_inode_pa(struct ext4_bud
 		 * from the bitmap and continue.
 		 */
 	}
-	BUG_ON(pa->pa_free != free);
+	/* be quiet if readonly device */
+	if (!dev_check_rdonly(sb->s_bdev))
+		BUG_ON(pa->pa_free != free);
+
 	atomic_add(free, &sbi->s_mb_discarded);
 
 	return err;
