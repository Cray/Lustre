Index: linux-4.12.14-16.4.1/fs/ext4/inode.c
===================================================================
--- linux-4.12.14-16.4.1.orig/fs/ext4/inode.c
+++ linux-4.12.14-16.4.1/fs/ext4/inode.c
@@ -4815,7 +4815,7 @@ struct inode *ext4_iget(struct super_blo
 				ivers |=
 		    (__u64)(le32_to_cpu(raw_inode->i_version_hi)) << 32;
 		}
-		inode_set_iversion_queried(inode, ivers);
+		ei->i_fs_version = ivers;
 	}
 
 	ret = 0;
@@ -5100,7 +5100,7 @@ static int ext4_do_update_inode(handle_t
 	}
 
 	if (likely(!test_opt2(inode->i_sb, HURD_COMPAT))) {
-		u64 ivers = inode_peek_iversion(inode);
+		u64 ivers = cpu_to_le32(ei->i_fs_version);
 
 		raw_inode->i_disk_version = cpu_to_le32(ivers);
 		if (ei->i_extra_isize) {
Index: linux-4.12.14-16.4.1/fs/ext4/ialloc.c
===================================================================
--- linux-4.12.14-16.4.1.orig/fs/ext4/ialloc.c
+++ linux-4.12.14-16.4.1/fs/ext4/ialloc.c
@@ -1077,6 +1077,7 @@ got:
 	ei->i_dtime = 0;
 	ei->i_block_group = group;
 	ei->i_last_alloc_group = ~0;
+	ei->i_fs_version = 0;
 
 	ext4_set_inode_flags(inode);
 	if (IS_DIRSYNC(inode))
Index: linux-4.12.14-16.4.1/fs/ext4/ext4.h
===================================================================
--- linux-4.12.14-16.4.1.orig/fs/ext4/ext4.h
+++ linux-4.12.14-16.4.1/fs/ext4/ext4.h
@@ -1093,6 +1093,8 @@ struct ext4_inode_info {
 	struct dquot *i_dquot[MAXQUOTAS];
 #endif
 
+	__u64 i_fs_version;
+
 	/* Precomputed uuid+inum+igen checksum for seeding inode checksums */
 	__u32 i_csum_seed;
 
